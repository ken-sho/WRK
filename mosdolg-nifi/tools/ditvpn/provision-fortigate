#!/usr/bin/env bash
#
# Bash script for provisioning the MongoDB instances

set -e
set -x

function ip_config(){
  export CLIENT_IP_ADDR=`ifconfig  | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}' | tail -1`
  export CLIENT_FQDN=`hostname`
  export CLIENT_NAME=`hostname | cut -d. -f 1 | tr '[:upper:]' '[:lower:]'`
  sudo echo "export CLIENT_IP_ADDR='$CLIENT_IP_ADDR'" >> /home/vagrant/.profile
#  echo "Configuring /etc/hosts ..."
#  echo "127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4 " > /etc/hosts
#  echo "::1       localhost localhost.localdomain localhost6 localhost6.localdomain6" >> /etc/hosts
#  echo "fe00::0 ip6-localnet" >> /etc/hosts
#  echo "ff00::0 ip6-mcastprefix" >> /etc/hosts
#  echo "ff02::1 ip6-allnodes" >> /etc/hosts
#  echo "ff02::2 ip6-allrouters" >> /etc/hosts
#  echo "ff02::3 ip6-allhosts" >> /etc/hosts
#  echo "$CLIENT_IP_ADDR    $CLIENT_FQDN $CLIENT_NAME" >> /etc/hosts
}

function install_fortigate(){
  echo "Install Fortigate Client"
  tar -xzvf /vagrant/provision/forticlientsslvpn_linux_4.4.2329.tar.gz -C /opt
  chmod -R 777 /opt/forticlientsslvpn/fortisslvpn.sh
  chmod -R 777 /opt/forticlientsslvpn/64bit/forticlientsslvpn_cli
  chmod -R 777 /opt/forticlientsslvpn/64bit/forticlientsslvpn
  chown -R vagrant:vagrant /opt/forticlientsslvpn
  echo "Done installing Fortigate Client"
}

function user_setup(){
#  sudo sh -c "killall mongod; true"
  mkdir -p /home/vagrant/vpn
#  sudo chmod -R 777 /opt/mon-forticlientsslvpn-expect.sh
#  sudo chmod -R 777 /opt/forticlientsslvpn-expect.sh
  sudo touch /var/log/expect.txt
  sudo chown vagrant:vagrant -R /var/log/expect.txt
  cp /vagrant/provision/mon-forticlientsslvpn-expect.sh /home/vagrant/vpn
  cp /vagrant/provision/forticlientsslvpn.exp /home/vagrant/vpn
  cp /vagrant/provision/tunnel.exp /home/vagrant/vpn
  cp /vagrant/provision/tunnels.sh /home/vagrant/vpn
  cp /vagrant/provision/$DIT_MD_VPN_USER.pfx /home/vagrant/vpn
  chmod -R 777 /home/vagrant/vpn
  chown -R vagrant:vagrant /home/vagrant/vpn
  mkdir -p /var/vpn
  echo "Set LC_ALL=C to .profile"
  sudo echo "export LC_ALL=C" >> /home/vagrant/.profile
  sudo echo "export VPN_HOST=37.230.149.12:10443" >> /home/vagrant/.profile
  export VPN_HOST='37.230.149.12:10443'
  sudo echo "export VPN_USER=$DIT_MD_VPN_USER" >> /home/vagrant/.profile
  export VPN_USER='$DIT_MD_VPN_USER'
  sudo echo "export VPN_PASS=\"$DIT_MD_VPN_PASS\"" >> /home/vagrant/.profile
  export VPN_PASS='$DIT_MD_VPN_PASS'
  sudo echo "export VPN_PKCS_PATH=/home/vagrant/vpn/$DIT_MD_VPN_USER.pfx" >> /home/vagrant/.profile
  export VPN_PKCS_PATH='/home/vagrant/vpn/$DIT_MD_VPN_USER.pfx'
  sudo echo "export VPN_PKCS_PASS=\"$DIT_MD_VPN_CERT_PASS\"" >> /home/vagrant/.profile
  export VPN_PKCS_PASS='$DIT_MD_VPN_CERT_PASS'
  sudo echo "export FORTICLIENT_PATH=/opt/forticlientsslvpn/64bit" >> /home/vagrant/.profile
  export FORTICLIENT_PATH=/opt/forticlientsslvpn/64bit
  sudo echo "PATH=$PATH:$FORTICLIENT_PATH" >> /home/vagrant/.profile
}

function update_repo(){
  echo "Install Fortigate Repository"
  # set to track fortinet development (rc)
#  echo "deb [arch=amd64] https://repo.fortinet.com/repo/ubuntu/ xenial multiverse" | sudo tee /etc/apt/sources.list.d/fortigate.list
#  sudo apt-key adv --keyserver keyserver.ubuntu.com --recv 0C49F3730359A14518585931BC711F9BA15703C6
  echo "Update Repositories"
  sudo apt-get update -y
  echo "Installing Dependencies"
  sudo apt install -y libgtk2.0-0 libsm6 expect ppp xauth
  #libxss1 libnss3 libasound2
}

#function config(){
#  sudo su
#  # disable THP
#  echo -e "never" > /sys/kernel/mm/transparent_hugepage/enabled
#  echo -e "never" > /sys/kernel/mm/transparent_hugepage/defrag
#  # disable mongod upstart service
#  echo 'manual' | sudo tee /etc/init/mongod.override
#}

function setup_vpn() {
  echo "Setup VPN Scripts"
  echo "#! /bin/bash
       su - vagrant
       /home/vagrant/vpn/mon-forticlientsslvpn-expect.sh
       " > /home/vagrant/vpn/startup_vpn.sh

  echo "MaxAuthTries 30" | sudo tee -a /etc/ssh/sshd_config  >/dev/null
  cd /home/vagrant
  chmod -R +x /home/vagrant/vpn/startup_vpn.sh
#  chown vagrant:vagrant /home/vagrant/vpn/startup_vpn.sh
  $FORTICLIENT_PATH/helper/setup.linux.sh 2
#  cd /
  echo "Done: Setup VPN Scripts"
}

function verify_ip() {
  export EXPECTED_IP=192.168.103.100
  ifconfig | grep $EXPECTED_IP
  ret=$?
  if [ $ret -ne 0 ]
  then
    ERR="The VM does not have the expected IP: $EXPECTED_IP
instead it has: $CLIENT_IP_ADDR
Ensure no other vagrant VM has that same expected IP: $EXPECTED_IP
You should recreate this VM after destroying it with 'vagrant destroy'"
    fatal "$ERR"
  fi
}

function fatal() {
  echo ERROR
  echo "$1"
  exit 1
}

#config
ip_config
update_repo
install_fortigate
user_setup
setup_vpn
# Starting at this point, it is only validations so removing exit on error
set +e
#verify_ip
echo "DONE"
